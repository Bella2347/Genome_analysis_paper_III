# R-code used for the DESeq analysis
module load R/3.6.0

source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")

library("DESeq2")

# Load the count data
b1_p <- read.table("../rna_analysis/4_count/htseq_count_b1.txt", header=FALSE, sep="\t”)
b1_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_b1.txt", header=FALSE, sep="\t”)
b1_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_b1.txt", header=FALSE, sep="\t”)

b2_p <- read.table("../rna_analysis/4_count/htseq_count_b2.txt", header=FALSE, sep="\t”)
b2_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_b2.txt", header=FALSE, sep="\t”)
b2_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_b2.txt", header=FALSE, sep="\t”)

b3_p <- read.table("../rna_analysis/4_count/htseq_count_b3.txt", header=FALSE, sep="\t”)
b3_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_b3.txt", header=FALSE, sep="\t”)
b3_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_b3.txt", header=FALSE, sep="\t”)

b4_p <- read.table("../rna_analysis/4_count/htseq_count_b4.txt", header=FALSE, sep="\t”)
b4_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_b4.txt", header=FALSE, sep="\t”)
b4_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_b4.txt", header=FALSE, sep="\t”)

c1_p <- read.table("../rna_analysis/4_count/htseq_count_c1.txt", header=FALSE, sep="\t”)
c1_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_c1.txt", header=FALSE, sep="\t”)
c1_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_c1.txt", header=FALSE, sep="\t”)

c2_p <- read.table("../rna_analysis/4_count/htseq_count_c2.txt", header=FALSE, sep="\t”)
c2_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_c2.txt", header=FALSE, sep="\t”)
c2_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_c2.txt", header=FALSE, sep="\t”)

c3_p <- read.table("../rna_analysis/4_count/htseq_count_c3.txt", header=FALSE, sep="\t”)
c3_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_c3.txt", header=FALSE, sep="\t”)
c3_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_c3.txt", header=FALSE, sep="\t”)

c4_p <- read.table("../rna_analysis/4_count/htseq_count_c4.txt", header=FALSE, sep="\t”)
c4_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_c4.txt", header=FALSE, sep="\t”)
c4_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_c4.txt", header=FALSE, sep="\t”)

c5_p <- read.table("../rna_analysis/4_count/htseq_count_c5.txt", header=FALSE, sep="\t”)
c5_s1 <- read.table("../rna_analysis/4_count/htseq_count_S1_c5.txt", header=FALSE, sep="\t”)
c5_s2 <- read.table("../rna_analysis/4_count/htseq_count_S2_c5.txt", header=FALSE, sep="\t”)

colnames(b1) <- c("gene", "b1")			# Set the column names
...

count_table <- merge(b1, b2, by = "gene")	# Merge the count-data into one data frame
count_data <- count_table[,-1]			# Save new dataset without the gene names

rownames(count_data) <- count_table[,1]	# Set the row names as the gene names

coldata <- read.tabel(“infromation_on_runs.csv”, header=TRUE, sep=”,”) # Read in information about the runs
coldata <- coldata[-c(10),]			# Drop the last row, c6

full_count_table <- DESeqDataSetFromMatrix(countData = count_data, colData = coldata, design = ~Culture) # Construct the deseq-dataframe
dds <- DESeq(full_count_table)		# Run the analysis
res <- results(dds, c("Culture", "Continuous", "Batch"))				# View the result

res <- res[ ! is.na(res$pvalue), ]        # Remove rows with NA

sig <- res[ which(res$padj < 0.01), ]   # Sorting on adjusted p-value sorts on the expected false discovery rate, here 1%
sig <- sig[ order(sig$padj), ]        # Order the significant genes
